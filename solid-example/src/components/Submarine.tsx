/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { T } from 'solid-three'
import { GLTF } from 'three-stdlib'
import { useGLTF } from '../lib/useGLTF'
type GLTFResult = GLTF & {
  nodes: {
    Cube008_Syub_0: THREE.Mesh
    Cube010_Syub002_0: THREE.Mesh
    Periscope_Syub_Red_0: THREE.Mesh
    Periscope_Syub_0: THREE.Mesh
    Periscope_Window001_0: THREE.Mesh
    Propeller_White001_0: THREE.Mesh
    Propeller_White_0: THREE.Mesh
    Sub001_Syub_Red_0: THREE.Mesh
    Sub001_Syub_0: THREE.Mesh
    SubWindows_SubMetal_0: THREE.Mesh
    SubWindows_Window_0: THREE.Mesh
  }
  materials: {
    Syub: THREE.MeshStandardMaterial
    ['Syub.002']: THREE.MeshStandardMaterial
    Syub_Red: THREE.MeshStandardMaterial
    ['Window.001']: THREE.MeshStandardMaterial
    ['White.001']: THREE.MeshStandardMaterial
    White: THREE.MeshStandardMaterial
    SubMetal: THREE.MeshStandardMaterial
    Window: THREE.MeshStandardMaterial
  }
}
export function Submarine(props) {
  const data = useGLTF<GLTFResult>('/submarine.glb')
  return (
    <T.Group {...props} dispose={null}>
      <Show when={data()} keyed>
        {({ nodes, materials }) => (
          <T.Group scale={0.005} rotation={[0, Math.PI, 0]}>
            <T.Group>
              <T.Mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube008_Syub_0.geometry}
                // material={materials.Syub}
                rotation={[-Math.PI / 2, 0, Math.PI / 2]}
                scale={100}
              />
              <T.Mesh
                castShadow
                receiveShadow
                geometry={nodes.Cube010_Syub002_0.geometry}
                // material={materials['Syub.002']}
                rotation={[0, 1.57, 0]}
                scale={100}
              />
              <T.Group position={[0, 227, 79.9]} rotation={[-Math.PI / 2, 0, Math.PI / 2]} scale={17.69}>
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Periscope_Syub_Red_0.geometry}
                  material={materials.Syub_Red}
                />
                <T.Mesh castShadow receiveShadow geometry={nodes.Periscope_Syub_0.geometry} material={materials.Syub} />
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Periscope_Window001_0.geometry}
                  material={materials['Window.001']}
                />
              </T.Group>
              <T.Group position={[0, 0, -451.12]} rotation={[-1.57, 1.52, 1.57]} scale={55.45}>
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Propeller_White001_0.geometry}
                  material={materials['White.001']}
                />
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Propeller_White_0.geometry}
                  material={materials.White}
                />
              </T.Group>
              <T.Group position={[0, 0, 79.9]} rotation={[Math.PI, 0, 2.75]} scale={[100, 100, 220]}>
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.Sub001_Syub_Red_0.geometry}
                  material={materials.Syub_Red}
                />
                <T.Mesh castShadow receiveShadow geometry={nodes.Sub001_Syub_0.geometry} material={materials.Syub} />
              </T.Group>
              <T.Group position={[0, 0, 210.56]} rotation={[0, 1.57, 0]} scale={[49.93, 49.93, 137.09]}>
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.SubWindows_SubMetal_0.geometry}
                  material={materials.SubMetal}
                />
                <T.Mesh
                  castShadow
                  receiveShadow
                  geometry={nodes.SubWindows_Window_0.geometry}
                  material={materials.Window}
                />
              </T.Group>
            </T.Group>
          </T.Group>
        )}
      </Show>
    </T.Group>
  )
}
